- name: Install Casks from Homebrew
  community.general.homebrew_cask:
    name: '{{ item }}'
  loop:
  - 1password
  - 1password-cli
- name: Install packages from Homebrew
  community.general.homebrew:
    
    name: '{{ item }}'
  loop:
  - pinentry-mac
  - openssh
  - gnupg
  - pwgen
  - snyk
  - sops
  - PurpleBooth/repo/setup-a-keyring-for-sops
- name: Create directories
  file:
    path: '{{ item }}'
    state: directory
    recurse: yes
  loop:
  - '{{ ansible_env.HOME }}/.bin'
- name: Link configuration and directories
  file:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    state: link
  loop:
  - dest: '{{ ansible_env.HOME }}/.bin/1password'
    src: '{{ inventory_dir }}/roles/tools_security/files/1password'
  - src: '{{ inventory_dir }}/roles/tools_security/files/secrets.fish'
    dest: '{{ ansible_env.HOME }}/.config/fish/conf.d/secrets.fish'
  - src: '{{ inventory_dir }}/roles/tools_security/files/gpg.fish'
    dest: '{{ ansible_env.HOME }}/.config/fish/conf.d/gpg.fish'
  - dest: '{{ ansible_env.HOME }}/.sops.yaml'
    src: '{{ inventory_dir }}/roles/tools_security/files/sops.yaml'

- name: Read and set environment variables from 1password with password
  command:
    cmd: '{{ inventory_dir }}/roles/tools_security/files/generate-envsecret'
    stdin: '{{ vault_password }}'

- name: Link gpg configuration
  file:
    src: '{{ inventory_dir }}/roles/tools_security/files/gpg-agent.conf'
    dest: '{{ ansible_env.HOME }}/.gnupg/gpg-agent.conf'
    state: link
    mode: '600'
- name: Link gpg configuration directories
  file:
    path: '{{ ansible_env.HOME }}/.gnupg'
    mode: '700'

- name: Create SOPS Key Store in Google Cloud
  command:
    cmd: setup-a-keyring-for-sops secret-store purplebooth-secret-storage sops sops-key

- name: Check that the SOPS credentials exist
  stat:
    path: '{{ ansible_env.HOME }}/.config/gcloud/application_sops_credentials.json'
  register: sops_credentials

- name: Copy SOPS Auth
  when: not sops_credentials.stat.exists
  copy:
    dest: '{{ ansible_env.HOME }}/.config/gcloud/application_sops_credentials.json'
    src: '{{ ansible_env.HOME }}/.config/gcloud/application_default_credentials.json'
    mode: "600"
